invert ACC:
0 0
or 
1 0
READ to ACC (from 1):
1 2
0 0
1 2
0 2 //ensure 1 in acc
0 1
0 0

WRITE from ACC (to 1):
1 1
0 0
1 1

GET1 in ACC:
1 2
0 0
1 2
0 2 //ensure 1 in acc

AND:
0 1
0 0

OR: (a|b=! !a&!b)
0 0
WRITE 2
READ 1
0 0
0 2

XOR:
WRITE 2
NAND 1
WRITE 3
READ 2
OR 1
AND 3

truth table NAND:
00 1
01 1
10 1
11 0

truth table or
00 0
01 1
10 1
11 1

truth table ! !a&!b
00 0
01 1
10 1
11 1

truth table ! a&b
00 1
01 1
10 1
11 0

truth table XOR:
00 0
01 1
10 1
00 0

invert a bit:
start states:
ACC	A	B	C	D
0	0	0	0	0
0	0	0	0	1	
0	0	0	1	0
0	0	0	1	1
0	0	1	0	0
0	0	1	0	1
0	0	1	1	0
0	0	1	1	1
0	1	0	0	0
0	1	0	0	1
0	1	0	1	0
0	1	0	1	1
0	1	1	0	0
0	1	1	0	1
0	1	1	1	0
0	1	1	1	1
1	0	0	0	0
1	0	0	0	1	
1	0	0	1	0
1	0	0	1	1
1	0	1	0	0
1	0	1	0	1
1	0	1	1	0
1	0	1	1	1
1	1	0	0	0
1	1	0	0	1
1	1	0	1	0
1	1	0	1	1
1	1	1	0	0
1	1	1	0	1
1	1	1	1	0
1	1	1	1	1
command sequence:
NAR A	ACC=(ACC NAND A)
NAW B	B=((ACC NAND A) NAND B)
NAR B	ACC=(((ACC NAND A) NAND B)NAND ACC)
NAW A	A=((((ACC NAND A) NAND B)NAND ACC)NAND A)
NAR B	ACC=(((((ACC NAND A) NAND B)NAND ACC)NAND A)NAND ACC)
NAW A	A=((((((ACC NAND A) NAND B)NAND ACC)NAND A)NAND ACC)NAND A)
NAR A	ACC=(((((((ACC NAND A) NAND B)NAND ACC)NAND A)NAND ACC)NAND A)NAND ACC)
NAW B	B=((((((((ACC NAND A) NAND B)NAND ACC)NAND A)NAND ACC)NAND A)NAND ACC)NAND B)
NAW A	A=(((((((((ACC NAND A) NAND B)NAND ACC)NAND A)NAND ACC)NAND A)NAND ACC)NAND B)NAND A)
NAR C	ACC=((((((((((ACC NAND A) NAND B)NAND ACC)NAND A)NAND ACC)NAND A)NAND ACC)NAND B)NAND A)NAND ACC)
NAW D	D=(((((((((((ACC NAND A) NAND B)NAND ACC)NAND A)NAND ACC)NAND A)NAND ACC)NAND B)NAND A)NAND ACC)NAND D)
NAR D	ACC=((((((((((((ACC NAND A) NAND B)NAND ACC)NAND A)NAND ACC)NAND A)NAND ACC)NAND B)NAND A)NAND ACC)NAND D)NAND ACC)
NAW C	C=(((((((((((((ACC NAND A) NAND B)NAND ACC)NAND A)NAND ACC)NAND A)NAND ACC)NAND B)NAND A)NAND ACC)NAND D)NAND ACC)NAND C)
NAR D	ACC=((((((((((((((ACC NAND A) NAND B)NAND ACC)NAND A)NAND ACC)NAND A)NAND ACC)NAND B)NAND A)NAND ACC)NAND D)NAND ACC)NAND C)NAND ACC)
NAR A	ACC=(((((((((((((((ACC NAND A) NAND B)NAND ACC)NAND A)NAND ACC)NAND A)NAND ACC)NAND B)NAND A)NAND ACC)NAND D)NAND ACC)NAND C)NAND ACC)NAND ACC)
1=(((((((((((((((E NAND A) NAND B)NAND E)NAND A)NAND E)NAND A)NAND E)NAND B)NAND A)NAND E)NAND D)NAND E)NAND C)NAND E)NAND E)
for start states:
000 100 101 001 011 111 101 101 100 110
001 101 100 100 110 110 100 100 101 111
010 110 111 011 011 110 100 100 101 111
011 111 110 110 100 100 110 010 011 011
100 100 101 001 011 111 101 101 100 110
101 101 100 100 110 110 100 100 101 111
110 010 011 111 101 001 011 111 110 100
111 011 011 111 101 001 011 111 110 100

invert acc:
start states:
ACC B
0	0
0	1
1	0
1	1
command sequence:
NAW B
NAR B
NAW B
NAR B
for start states:
00 -> 01 -> 11 -> 10 -> 10
01 -> 01 -> 11 -> 10 -> 10
10 -> 11 -> 01 -> 01 -> 11
11 -> 10 -> 11 -> 10 -> 10