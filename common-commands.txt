invert ACC:
0 0
or 
1 0
READ to ACC (from 1):
1 2
0 0
1 2
0 2 //ensure 1 in acc
0 1
0 0

WRITE from ACC (to 1):
1 1
0 0
1 1

GET1 in ACC:
1 2
0 0
1 2
0 2 //ensure 1 in acc

AND:
0 1
0 0

OR: (a|b=! !a&!b)
0 0
WRITE 2
READ 1
0 0
0 2

XOR:
WRITE 2
!& 1
WRITE 3
READ 2
OR 1
AND 3

truth table !&:
00 1
01 1
10 1
11 0

truth table or
00 0
01 1
10 1
11 1

truth table ! !a&!b
00 0
01 1
10 1
11 1

truth table ! a&b
00 1
01 1
10 1
11 0

truth table XOR:
00 0
01 1
10 1
00 0

invert a bit:
start states:
ACC	A	B	C	D
0	0	0	0	0
0	0	0	0	1	
0	0	0	1	0
0	0	0	1	1
0	0	1	0	0
0	0	1	0	1
0	0	1	1	0
0	0	1	1	1
0	1	0	0	0
0	1	0	0	1
0	1	0	1	0
0	1	0	1	1
0	1	1	0	0
0	1	1	0	1
0	1	1	1	0
0	1	1	1	1
1	0	0	0	0
1	0	0	0	1	
1	0	0	1	0
1	0	0	1	1
1	0	1	0	0
1	0	1	0	1
1	0	1	1	0
1	0	1	1	1
1	1	0	0	0
1	1	0	0	1
1	1	0	1	0
1	1	0	1	1
1	1	1	0	0
1	1	1	0	1
1	1	1	1	0
1	1	1	1	1
command sequence:
NAR A	ACC=(ACC !& A)
NAW B	B=((ACC !& A) !& B)
NAR B	ACC=(((ACC !& A) !& B) !& ACC)
NAW A	A=((((ACC !& A) !& B) !& ACC) !& A)
NAR B	ACC=(((((ACC !& A) !& B) !& ACC) !& A) !& ACC)
NAW A	A=((((((ACC !& A) !& B) !& ACC) !& A) !& ACC) !& A)
NAR A	ACC=(((((((ACC !& A) !& B) !& ACC) !& A) !& ACC) !& A) !& ACC)
NAW B	B=((((((((ACC !& A) !& B) !& ACC) !& A) !& ACC) !& A) !& ACC) !& B)
NAW A	A=(((((((((ACC !& A) !& B) !& ACC) !& A) !& ACC) !& A) !& ACC) !& B) !& A)
NAR C	ACC=((((((((((ACC !& A) !& B) !& ACC) !& A) !& ACC) !& A) !& ACC) !& B) !& A) !& ACC)
NAW D	D=(((((((((((ACC !& A) !& B) !& ACC) !& A) !& ACC) !& A) !& ACC) !& B) !& A) !& ACC) !& D)
NAR D	ACC=((((((((((((ACC !& A) !& B) !& ACC) !& A) !& ACC) !& A) !& ACC) !& B) !& A) !& ACC) !& D) !& ACC)
NAW C	C=(((((((((((((ACC !& A) !& B) !& ACC) !& A) !& ACC) !& A) !& ACC) !& B) !& A) !& ACC) !& D) !& ACC) !& C)
NAR D	ACC=((((((((((((((ACC !& A) !& B) !& ACC) !& A) !& ACC) !& A) !& ACC) !& B) !& A) !& ACC) !& D) !& ACC) !& C) !& ACC)
NAR A	ACC=(((((((((((((((ACC !& A) !& B) !& ACC) !& A) !& ACC) !& A) !& ACC) !& B) !& A) !& ACC) !& D) !& ACC) !& C) !& ACC) !& ACC)
1=(((((((((((((((E !& A) !& B) !& E) !& A) !& E) !& A) !& E) !& B) !& A) !& E) !& D) !& E) !& C) !& E) !& E)
for start states:
0	0	0	0	0 10000 10100 00100 01100 11100 10100 10100 10000 11000  11000 11001 01001 01011 11011 01011
0	0	0	0	1 10001 10101 00101 01101 11101 10101 10101 10001 11001  11001 11000 11000 11010 11010 01010
0	0	0	1	0 10010 10110 00110 01110 11110 10110 10110 10010 11010  01010 01011 11011 11001 01001 11001
0	0	0	1	1
0	0	1	0	0
0	0	1	0	1
0	0	1	1	0
0	0	1	1	1
0	1	0	0	0
0	1	0	0	1
0	1	0	1	0
0	1	0	1	1
0	1	1	0	0
0	1	1	0	1
0	1	1	1	0
0	1	1	1	1
1	0	0	0	0
1	0	0	0	1	
1	0	0	1	0
1	0	0	1	1
1	0	1	0	0
1	0	1	0	1
1	0	1	1	0
1	0	1	1	1
1	1	0	0	0
1	1	0	0	1
1	1	0	1	0
1	1	0	1	1
1	1	1	0	0
1	1	1	0	1
1	1	1	1	0
1	1	1	1	1

invert acc:
start states:
ACC B
0	0
0	1
1	0
1	1
command sequence:
NAW B
NAR B
NAW B
NAR B
for start states:
00 -> 01 -> 11 -> 10 -> 10
01 -> 01 -> 11 -> 10 -> 10
10 -> 11 -> 01 -> 01 -> 11
11 -> 10 -> 11 -> 10 -> 10