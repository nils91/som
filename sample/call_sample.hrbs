import NOOP0;
import JUMP0N1;
import JUMPTARGET0;
import EXIT0;
import OR3;
import COPY2;
import COPYADR0N1N2;

MAIN:
	global START_FUNCTION_JUMP_TARGET_INIT:NOOP0;
	INIT_CALL0N1[SUB] &FUNCTION_SUB;
	JUMP0N1 &END_FUNCTION_JUMP_TARGET_DEF;
	global END_FUNCTION_JUMP_TARGET_INIT:NOOP0;
	global START_FUNCTION_JUMP_TARGET_DEF:NOOP0;
	global FUNCTION_SUB: JUMPTARGET0;
	SUB PARAM_STRUCT_SUB.A,PARAM_STRUCT_SUB.B,PARAM_STRUCT_SUB.C;
	global END_FUNCTION_JUMP_TARGET_DEF:JUMPTARGET0;
	CALL_SUB ACC,ACC,ACC;
	EXIT0;

SUB A,B,C:
	alloc D;
	OR3 A,C,D;
	COPY2 D,B;
	JUMP0N1 INIT_RETURN0N1[SUB].PT;

CALL_SUB A,B,C:
	INIT_RETURN0N1[SUB] &CONT;
	PARAM_STRUCT_SUB A,B,C;
	JUMP0N1 INIT_CALL0N1[SUB].PT;
	local CONT:JUMPTARGET0;
	
INIT_RETURN0N1 ADR:
	local alloc PT[$N];
	COPYADR0N1N2 ADR,PT;
	
INIT_CALL0N1 ADR:
	local alloc PT[$N];
	COPYADR0N1N2 ADR,PT;
	
PARAM_STRUCT_SUB A_PARAM,B_PARAM,C_PARAM:
	shared alloc A;
	shared alloc B;
	shared alloc C;
	COPY2 A_PARAM,A;
	COPY2 B_PARAM,B;
	COPY2 C_PARAM,C;